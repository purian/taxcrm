<!DOCTYPE html>
<html>
  <head>
    <title>TaxCrm</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>   
  </head>

  <body>
    <h1>Filter Leads</h1>
    <div>
      <label for="lead_owner">Lead Owner:</label>
      <select id="lead_owner">
        <option value="">Select Lead Owner</option>
        <% @lead_owners.each do |owner| %>
          <option value="<%= owner %>"><%= owner %> (<%= Lead.where(LeadOwnerId_name: owner).count %>)</option>
        <% end %>
      </select>
    </div>

    <div>
      <label for="lawyer">Lawyer and Year:</label>
      <select id="lawyer">
        <option value="">Select Lawyer and Year</option>
      </select>
    </div>

    <div id="chart-container" style="height: 300px;"></div>

    <div id="details-container"></div>

    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const leadOwnerSelect = document.getElementById("lead_owner");
        const lawyerSelect = document.getElementById("lawyer");

        function fetchLawyers(leadOwner) {
          if (leadOwner) {
            fetch(`/leads/filter?lead_owner=${leadOwner}`)
              .then(response => response.json())
              .then(data => {
                lawyerSelect.innerHTML = "<option value=''>Select Lawyer and Year</option>";
                for (const [lawyer, years] of Object.entries(data.lawyers)) {
                  for (const [year, count] of Object.entries(years)) {
                    if (count > 0) {
                      const option = document.createElement("option");
                      option.value = `${lawyer}-${year}`;
                      option.text = `${lawyer} (${year} - ${count} records)`;
                      lawyerSelect.appendChild(option);
                    }
                  }
                }
              });
          }
        }

        function updateChart() {
          const leadOwner = leadOwnerSelect.value;
          const selectedLawyerValue = lawyerSelect.value;
          if (!selectedLawyerValue) return;

          const [lawyer, year] = selectedLawyerValue.split("-");
          if (leadOwner && lawyer && year) {
            fetch(`/leads/details?lead_owner=${leadOwner}&lawyer=${lawyer}&year=${year}`)
              .then(response => response.json())
              .then(data => {
                new Chartkick.LineChart("chart-container", data.leads);
                updateDetailsTable(data.leads);
              });
          }
        }

        function updateDetailsTable(leads) {
          const detailsContainer = document.getElementById("details-container");
          detailsContainer.innerHTML = "<table><tr><th>Week</th><th>Status</th><th>Total</th><th>Details</th></tr>";
          
          Object.entries(leads).forEach(([key, value]) => {
            if (value > 0) {
              const [week, status] = key.split(",");
              const row = document.createElement("tr");
              row.innerHTML = `
                <td>${week}</td>
                <td>${status}</td>
                <td>${value}</td>
                <td><a href="/leads/show_leads?week_start=${week}&status=${status}" data-week="${week}" data-status="${status}" class="details-link">View Details</a></td>
              `;
              detailsContainer.querySelector("table").appendChild(row);
            }
          });

          document.querySelectorAll(".details-link").forEach(link => {
            link.addEventListener("click", function(event) {
              event.preventDefault();
              const weekStart = this.dataset.week;
              const status = this.dataset.status;
              fetch(`/leads/show_leads?week_start=${weekStart}&status=${status}`)
                .then(response => response.json())
                .then(data => {
                  const detailsContainer = document.getElementById("details-container");
                  detailsContainer.innerHTML = "<table><tr><th>ID</th><th>Name</th><th>Email</th><th>Phone Number</th><th>Lead Status</th><th>Lead Owner</th><th>Documentation</th></tr>";
                  data.leads.forEach(lead => {
                    const row = document.createElement("tr");
                    row.innerHTML = `<td>${lead.id}</td><td>${lead.Name}</td><td>${lead.Email}</td><td>${lead.PhoneNumber}</td><td>${lead.LeadStatusId_Name}</td><td>${lead.LeadOwnerId_name}</td><td>${lead.Documentation}</td>`;
                    detailsContainer.querySelector("table").appendChild(row);
                  });
                });
            });
          });
        }

        function initializeFromURL() {
          const params = new URLSearchParams(window.location.search);
          const leadOwner = params.get('lead_owner');
          const lawyerYear = params.get('lawyer_year');

          if (leadOwner) {
            leadOwnerSelect.value = leadOwner;
            fetchLawyers(leadOwner);
          }

          if (lawyerYear) {
            lawyerSelect.value = lawyerYear;
            updateChart();
          }
        }

        leadOwnerSelect.addEventListener("change", function() {
          fetchLawyers(this.value);
        });

        lawyerSelect.addEventListener("change", function() {
          updateChart();
        });

        // Initialize selections from URL on page load
        initializeFromURL();
      });
    </script>
  </body>
</html>